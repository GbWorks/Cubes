<?xml version="1.0" encoding="utf-8" ?>
<!--

    /$$$$$$            /$$                          
   /$$__  $$          | $$                          
  | $$  \__/ /$$   /$$| $$$$$$$   /$$$$$$   /$$$$$$$
  | $$      | $$  | $$| $$__  $$ /$$__  $$ /$$_____/
  | $$      | $$  | $$| $$  \ $$| $$$$$$$$|  $$$$$$ 
  | $$    $$| $$  | $$| $$  | $$| $$_____/ \____  $$
  |  $$$$$$/|  $$$$$$/| $$$$$$$/|  $$$$$$$ /$$$$$$$/
   \______/  \______/ |_______/  \_______/|_______/ 

Cubes Framework
Copyright (c) 2018 GbWorks

-->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Off" internalLogFile="logs\\nlog-internal.log">

  <targets>
    <!-- Database target
    SET ANSI_NULLS ON
    SET QUOTED_IDENTIFIER ON
    CREATE TABLE [dbo].[Log] (
      [Logged] [datetime] NOT NULL,
      [Level] [nvarchar](50) NOT NULL,
      [Message] [nvarchar](max) NOT NULL,
      [Logger] [nvarchar](250) NULL,
      [Callsite] [nvarchar](max) NULL,
      [Exception] [nvarchar](max) NULL,
      CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
        WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
    ) ON [PRIMARY]
    <target name="database"
            xsi:type="Database"
            connectionString="Server=(local);Database=Stage;Trusted_Connection=True;"
            commandText="insert into dbo.Log (
                Logged, Level, Message,
                Logger, CallSite, Exception
              ) values (
                @Logged, @Level, @Message,
                @Logger, @Callsite, @Exception
              );">
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite}" />
      <parameter name="@exception" layout="${exception:toString}" />
    </target>
    
    <logger name="*" minlevel="Debug" writeTo="database" />
    -->

    <!-- Split web access log
    	<target name="web_access_file"
            xsi:type="File"
            layout="${message}"
            fileName="${basedir}/Logs/webaccess.txt"
            archiveFileName="${basedir}/Logs/webaccess.{#}.txt"
            archiveNumbering="Date"
            archiveDateFormat="yyyyMMdd"
            archiveEvery="Day"
            maxArchiveFiles="7"
            encoding="utf-8"
            lineEnding="CRLF"
            />
      <logger name="Cubes.Core.Owin.WebServer" minlevel="info" writeTo="web_access_file" />
    
      Also add on file console rule filters:
      	<when condition="contains('${logger}', 'Cubes.Core.Owin.WebServer')" action ="ignore" />
    -->
    
    <target name="console"
            xsi:type="ColoredConsole"
            layout="${time} | ${level:uppercase=true} | ${logger} :: ${message} ${onexception:${newline}${exception:format=Type,Message,Method,Data,StackTrace:maxInnerExceptionLevel=8:separator=\\r\\n:innerFormat=Type,Message,Method,StackTrace:innerExceptionSeparator=\\r\\n----  Inner Exception  ----\\r\\n}} ">
      <highlight-word foregroundColor="Green" regex="Cubes, version (\d|\.)+" compileRegex="true"/>
      <highlight-word foregroundColor="Green" regex="Cubes listening at (.)+" compileRegex="true"/>
    </target>
    
    <target name="file"
            xsi:type="File"
            layout="${date}|${level:uppercase=true}|${logger}|${message} ${onexception:${newline}${exception:format=Type,Message,Method,StackTrace:separator=\\r\\n:innerFormat=Type,Message,Method,StackTrace:maxInnerExceptionLevel=8:innerExceptionSeparator=\\r\\n----  Inner Exception  ----\\r\\n}${newline}---- Exception as JSON ----${newline}${exception:format=@}${newline}------- End of JSON -------${newline}}"
            fileName="${basedir}/Logs/logfile.txt"
            archiveFileName="${basedir}/Logs/logfile.{#}.txt"
            archiveNumbering="Date"
            archiveDateFormat="yyyyMMdd"
            archiveEvery="Day"
            maxArchiveFiles="7"
            encoding="utf-8"
            lineEnding="CRLF"
            />
  </targets>

  <rules>

    <logger name="*" minlevel="Debug" writeTo="console" >
      <filters>
        <when condition="starts-with('${message}','Batch acquisition of')" action="Ignore"/>
      </filters>
    </logger>
    <logger name="*" minlevel="Info" writeTo="file" />
    
  </rules>

</nlog>
